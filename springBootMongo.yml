apiVersion: v1
kind: ReplicaController
metadata:
   name: springapprc
spec:
  replicas: 2
  selector:
     matchLabels:
        app: springapp
  template:
     metadata:
        name: springappapppod
        labels:
          app: springapp
     spec:
        containers:
        - name: springappcontainer
          image: moshanischi/spring-boot-mongo
          ports:
          - containerPort: 8080
          env:
          - name: MONGO_DB_HOSTNAME
            value: mongosvc
          - name: MONGO_DB_USERNAME
            value: devdb
          - name: MONGO_DB_PASSWORD
            value: devdb@123
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
spec:
  type: NodePort
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodbrs
spec:
  replicas: 1
  selector:
    matchLabels:
       app: mongo
  template:
    metadata:
       name: mongodbpod
       labels:
         app: mongo
    spec:
       volumes:
       - name: mongodbvol
         nfs:
           server: 172.31.32.92
           path: "/mnt/nfs-share"
       containers:
       - name: mongocontainer
         image: mongo
         ports:
         - containerPort: 27017
         env:
         - name: MONGO_INITDB_ROOT_USERNAME
           value: devdb
         - name: MONGO_INITDB_ROOT_PASSWORD
           value: devdb@123
         volumeMounts:
         - name: mongodbvol
           mountPath: /data/db
---
apiVersion: v1
kind: Service
metadata:
   name: mongosvc
spec:
   type: ClusterIP
   selector:
      app: mongo
   ports:
   - port: 27017
     targetPort: 27017
